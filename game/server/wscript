#! /usr/bin/env python
# encoding: utf-8
# a1batross, mittorn, 2018

from waflib import Utils
import os
 
def options(opt):
	# stub
	return

def configure(conf):
	# stub
	return

def build(bld):
	defines = []
	source = bld.path.parent.ant_glob([
		'pm_shared/*.cpp',
	])
	source = []
	source += [
		'../../pm_shared/pm_debug.cpp',
		'../../pm_shared/pm_shared.cpp',
		'../../pm_shared/pm_math.cpp'
	]
	
	source += [
		'npc_agrunt.cpp', 'airtank.cpp', 'npc_aflock.cpp', 'animating.cpp', 'animation.cpp', 'npc_apache.cpp',
		'npc_barnacle.cpp', 'npc_barney.cpp', 'npc_bigmomma.cpp', 'npc_bloater.cpp', 'bmodels.cpp', 'npc_bullsquid.cpp', 'func_button.cpp',
		'cbase.cpp', 'client.cpp', 'combat.cpp', 'ai_controller.cpp',
		'ai_defaultai.cpp', 'func_door.cpp',
		'effects.cpp', 'explode.cpp',
		'ai_flyingmonster.cpp', 'func_break.cpp', 'func_tank.cpp',
		'game.cpp', 'gamerules.cpp', 'npc_gargantua.cpp', 'ai_genericmonster.cpp', 'ggrenade.cpp', 'globals.cpp', 'npc_gman.cpp',
		'ai.cpp', 'func_recharge.cpp', 'npc_h_cine.cpp', 'npc_h_cycler.cpp', 'h_export.cpp', 'npc_hassassin.cpp', 'npc_headcrab.cpp',
		'func_healthcharger.cpp', 'npc_hgrunt.cpp', 'npc_hornet.cpp', 'npc_houndeye.cpp',
		'npc_ichthyosaur.cpp', 'islave.cpp', 'items.cpp',
		'npc_leech.cpp', 'lights.cpp',
		'maprules.cpp', 'npc_monstermaker.cpp', 'ai_monsters.cpp', 'ai_monsterstate.cpp', 'func_mortar.cpp', 'multiplay_gamerules.cpp',
		'npc_nihilanth.cpp', 'info_node.cpp',
		'observer.cpp', 'npc_osprey.cpp',
		'pathcorner.cpp', 'plane.cpp', 'plats.cpp', 'player.cpp', 'playermonster.cpp',
		'npc_rat.cpp', 'npc_roach.cpp',
		'ai_schedule.cpp', 'npc_scientist.cpp', 'ai_scripted.cpp', 'singleplay_gamerules.cpp', 'skill.cpp',
		'sound.cpp', 'soundent.cpp', 'spectator.cpp', 'ai_squadmonster.cpp', 'subs.cpp',
		'ai_talkmonster.cpp', 'teamplay_gamerules.cpp', 'npc_tempmonster.cpp', 'npc_tentacle.cpp',
		'triggers.cpp', 'npc_turret.cpp',
		'util.cpp', 
		'weapons.cpp', 'world.cpp', 'xen.cpp', 'npc_zombie.cpp',
		'../shared/hl1/weapon_crossbow.cpp',
		'../shared/hl1/weapon_crowbar.cpp',
		'../shared/hl1/weapon_egon.cpp',
		'../shared/hl1/weapon_gauss.cpp',
		'../shared/hl1/weapon_frag.cpp',
		'../shared/hl1/weapon_hornetgun.cpp',
		'../shared/hl1/weapon_mp5.cpp',
		'../shared/hl1/weapon_python.cpp',
		'../shared/hl1/weapon_rpg.cpp',
		'../shared/hl1/weapon_satchel.cpp',
		'../shared/hl1/weapon_shotgun.cpp',
		'../shared/hl1/weapon_squeakgrenade.cpp',
		'../shared/hl1/weapon_tripmine.cpp',
		'../shared/hl1/weapon_glock.cpp']
		
	if bld.env.VOICEMGR:
		source += bld.path.parent.ant_glob([
			'game_shared/voice_gamemgr.cpp',
		])
	else:
		defines += ['NO_VOICEGAMEMGR']
		
	#includes = Utils.to_list('. wpn_shared ../common ../engine ../pm_shared ../game_shared ../public')
	includes = list()
	includes.append(bld.env.ENGINE)
	includes.append(bld.env.COMMON)
	includes.append(bld.env.PMSHARED)
	includes.append(bld.env.SHARED)
	includes.append(bld.env.PUBLIC)
	includes.append(bld.env.ROOT)

	libs = ['public', 'mathlib']

	if bld.env.DEST_OS2 not in ['android']:
		install_path = os.path.join(str(bld.env.GAMEDIR), str(bld.env.SERVER_DIR))
	else:
		install_path = bld.env.PREFIX

	bld.shlib(
		source   = source,
		target   = 'server',
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = 2
	)
